#!/bin/bash
# v0.1 iterate through my fossils
# v0.2 Add in some git projects
# v0.3 Added in some more sqlite-related items
# v0.3a TODO: split this up like fossilweb.sh
# v0.4 still working on new fossilstuff function - not live yet
# v0.5 newfossilstuff got the axe. I've got to build a function to
#      cycle through $1
# v0.6 I added tips to Tcl (Tcl Improvement Proposals)
# v0.6a Added extra line between downloads
# v0.7 add libfossil, correct mistakes
# v0.8 create a rarely section for docsrc, book and others
# v0.9 Added sqlite-wasm to the rarely section, also added althttpd
# v0.10 Moved sqlite-wasm back out of rarely, due to activity.
# v0.11 Added pikchr into rarely
# v0.12 Adding params to fossil.
# v0.13 Changed out MYHOME and other vars to FOSHOME etc.
# v0.14 Added sqlite-cloudsqlite, tidied up help
# v0.15 Put in fnc, should have been in there a while. Poor thing.
#########
# Notes #
#########
# Really needs to be run from the source directory first
# fossil has source code, forums, pikchr and a book.
# sqlite has source code, forums, docsrc, althttpd, wasm and a testing harness
# tcl and tk each have source code, and tcl has proposals (tcl-tip)
# Cannot get TH3 source without a commercial licence, so can't run tests for docsrc
# leave libfossil out of the main loop, but call them specifically, just like fossil-book, pikchr, sqlite-wasm and sqlite-testing

FOSHOME="/home/viking/src/c/"
# Obligatory help function
function dohelp() {
  echo "$0: help page"
  echo "$0 fossil{-scm} [code|forum|book|pikchr]: fetches named section"
  echo "$0 fossil{-scm} all: fetches code, and forum (not book)"
  echo "$0 libfossil{-all}: fetches libfossil (libfossil-code), fnc and libfossil-forum"
  echo "$0 [fsl|fnc]: fetches fsl or fnc"
  echo "$0 sqlite: fetches sqlite fossils (code, forum, docsrc, wasm)"
  echo "$0 sqlite-{code|forum|docsrc|tests|althttpd|wasm}: fetches code, forum, docsrc, althttpd or test scripts"
  echo "$0 tcl-code: fetches code"
  echo "$0 tcl-tip: fetches proposals"
  echo "$0 tk-code: fetches code"
  echo "$0 althttpd: fetches althttpd code"
  echo "$0 wasm: fetches wasm-related code"
  echo "=== Rarely-updated stuff"
  echo "$0 rarely: updates all the stuff not touched by [{fossil|sqlite}-]all"
  echo "$0 Currently, this includes the following fossil and sqlite projects:"
  echo " fossil-book, pikchr, fsl, sqlite-tests, sqlite-althttpd, sqlite-cloud,"
  echo " and cwal. This list will need modifying on occasion"
# wanderinghorse - a.k.a. libfossil
  cd ../libfossil
  cwal
  echo "======= TODO"
  echo "$0 fsl: fetch from the fsl project"
  echo "$0 {all}: fetches fossil all, sqlite all"
# Need a section in here for pull
  exit 0
}

function fossil-code() {
  fossil ${FOSCMD} ${FOSCMDPARAMS[*]} fossil.fossil
  echo "==== fossil-code...done ==="
}

function fossil-forum() {
  fossil ${FOSCMD} ${FOSCMDPARAMS[*]} fossilforum.fossil 
  echo "==== fossil-forum...done ==="
}

# fossil only. Rarely updated  
function fossil-book() {
  fossil ${FOSCMD} ${FOSCMDPARAMS[*]} fossil-book.fossil 
  echo "==== fossil-book...done ==="
}

# Should go into Rarely
function pikchr() {
  fossil ${FOSCMD} ${FOSCMDPARAMS[*]} pikchr.fossil
  echo "==== pikchr...done ===="
}

function fossil-all() {
  cd fossil-scm # Yes, the directory name has -scm appended
  t=fossil
  ${t}-code
  sleep 5
  ${t}-forum
#  ${t}-book # Shifted to rarely()
  cd ..
}

###### wanderinghorse items
function libfossil-code() {
  fossil ${FOSCMD} ${FOSCMDPARAMS[*]} libfossil.fossil
  echo "==== libfossil...done ==="
}

function libfossil-forum {
  fossil ${FOSCMD} ${FOSCMDPARAMS[*]} libfossil-forum.fossil
  echo "==== libfossil-forum...done ==="
}

function libfossil-all {
  cd libfossil
  libfossil-code
  libfossil-forum
  fnc
  cd -
}

# Scripting engine without a language. Not sure where to put this.
function cwal {
  fossil ${FOSCMD} ${FOSCMDPARAMS[*]} cwal.fossil
}

# cson - old, but seemingly still in use
function cson {
  fossil ${FOSCMD} ${FOSCMDPARAMS[*]} cson.fossil
}

###### end of wanderinghorse stuff

# Shell-based front end to fossil, append to rarely. Hasn't been updated since 2019.
function fsl {
  fossil ${FOSCMD} ${FOSCMDPARAMS[*]} fsl.fossil
}

# ncurses client for fossil
function fnc {
  fossil ${FOSCMD} ${FOSCMDPARAMS[*]} fnc.fossil
}

# This is spectacularly unlikely to update further, but is here for completeness' sake
function fuel {
  cd fossil-scm
  fossil ${FOSCMD} ${FOSCMDPARAMS[*]} fossil-fuel.fossil
  cd -
}

# sqlite-hosted or sqlite-related projects
function sqlite-code() {
  fossil ${FOSCMD} ${FOSCMDPARAMS[*]} sqlite.fossil
  echo "==== sqlite-code...done ==="
}

function sqlite-forum() {
  fossil ${FOSCMD} ${FOSCMDPARAMS[*]} sqliteforum.fossil 
  echo "==== sqlite-forum...done ==="
}

function sqlite-wasm() {
  fossil ${FOSCMD} ${FOSCMDPARAMS[*]} wasm.fossil
  echo "==== sqlite-wasm...done ==="
}

### These fossils are rarely updated. ###
function sqlite-docsrc() {
  fossil ${FOSCMD} ${FOSCMDPARAMS[*]} docsrc.fossil 
  echo "==== sqlite-docsrc...done ==="
}

function sqlite-tests() {
  fossil ${FOSCMD} ${FOSCMDPARAMS[*]} sqllogictest.fossil 
  echo "==== sqlite-tests...done ==="
}

function sqlite-althttpd() {
  fossil ${FOSCMD} ${FOSCMDPARAMS[*]} althttpd.fossil 
  echo "==== sqlite-althttpd...done ==="
}

function sqlite-cloud() {
  fossil ${FOSCMD} ${FOSCMDPARAMS[*]} cloudsqlite.fossil 
  echo "==== sqlite-cloudsqlite...done ==="
}


# Does everything not in "rarely" section
function sqlite-all() {
  t="sqlite"
  cd ${t}
  ${t}-code
  sleep 5
  ${t}-forum
  sleep 5
  ${t}-docsrc
  sleep 5
  ${t}-wasm
#  ${t}-althttpd # shifted to rarely()
#  ${t}-tests # shifted to rarely()
#  ${t}-cloud # shifted to rarely()
  unset $t
  cd .. # gets us back to ${MYHOME}
}

# Updates tcl sourcecode
function tcl-code() {
  fossil ${FOSCMD} ${FOSCMDPARAMS[*]} tcl.fossil 
  echo "==== tcl-code...done ==="
}

# Updates tcl TIP database
function tcl-tips() {
  fossil ${FOSCMD} ${FOSCMDPARAMS[*]} tips.fossil 
  echo "==== tcl-tips...done ==="
}

# Updates tk sourcecode
function tk-code() {
  fossil ${FOSCMD} ${FOSCMDPARAMS[*]} tk.fossil 
  echo "==== tk code...done ==="
}

# Updates both tcl and tk sources
function tcl-all() {
  cd tcl
  tcl-code
  sleep 5
  tcl-tips   # TCL Improvement Proposals, rarely updated
  sleep 5
  cd ../tk
  tk-code
  cd .. # gets us back to ${MYHOME}
}

# these don't get updated very often, if at all
function rarely() { 
# fossil stuff
  cd fossil-scm
  fossil-book
  pikchr
# sqlite stuff
  cd ../sqlite
  sqlite-tests
  sqlite-althttpd
  sqlite-cloud
# wanderinghorse - a.k.a. libfossil
  cd ../libfossil
  cwal
  fsl
  cd ..
}

function all() { # These each have a cd in them
# Note: does not include fsl/libfossil
  fossil-all # code, forum, not book
  sleep 5
  sqlite-all # code, forum, althttpd, not tests
  sleep 5
  tcl-all    # code (tcl/tk), TCL Improvement Proposals (tip)
}
# Takes path arg

pushd "${FOSHOME}"
# Let's add something to FOSCMD to make the operation specific
# the caseloop below processes in order. -u needs to be first if
# we want to sync unversioned artifacts
declare FOSCMDPARAMS
# Was here for getting everything and breadcrumbing where I was
# FOSCMDPARAMS=("-v" "--verily" "-R")
# Strip it back a bit, I think.
FOSCMDPARAMS=("-R")

FOSCMD="pull" # default value unless it gets changed by -u
if [ ${#*} -lt 1 ]; then # I want it all
	all # sleep is built in between stages
else #iterate, chuck it in if keyword isn't recognised.
  for t in ${*}; do
    case "${t}" in 
    "-u"|"--unversioned")
      # sync can't push without user perms on remote, but can still pull unversioned artifacts
      FOSCMDPARAMS=("-u" "-v" "--verily" "-R")
      FOSCMD="sync"
#      dohelp 
    ;;
    "help"|"-h")
      dohelp 
    ;; # exits
      # I should cover this if I want all the ones I don't normally cover
    "rarely") rarely ;; 
    "all") all ;; # Yeah, I know I said it above, but here I specify it.
    "fossil"|"sqlite"|"tcl")
      "${t}"-all
    ;;
# All fossil-related stuff
    "fossil-forum"|"fossil-code"|"fossil-book"|"pikchr")
      cd "fossil-scm"
      "${t}" # calls the function directly. I'll have to see if this works.
      cd ..
    ;;
    "libfossil"|"libfossil-all")
      libfossil-all # should do libfossil-code and libfossil-forum
    ;;
    "cwal")
      cd "libfossil"
      cwal
      cd ..
    ;;
    "cson")
      cd "libfossil"
      cson
      cd ..
    ;;
    "fsl" ) 
      cd "libfossil"
      fsl  # Seems a bit redundant to make this a full function call
      cd -
    ;;
    "fnc" ) 
      cd "libfossil"
      fnc  # Seems a bit redundant to make this a full function call
      cd -
    ;;
    "book")
      cd fossil-scm
      fossil-book 
      cd -
    ;;

# All sqlite-related stuff
"sqlite-code"|"sqlite-forum"|"sqlite-docsrc"|"docsrc"|"sqlite-tests"|"sqlite-althttpd"|"sqlite-wasm") 
      cd sqlite
      "${t}"
      cd -
    ;;
    "althttpd"|"httpd") 
        cd sqlite
        sqlite-althttpd
        cd ..
    ;;
    "docsrc")
        cd sqlite
        sqlite-docsrc
        cd ..
    ;;
    "wasm")
        cd sqlite
        sqlite-wasm
        cd ..
    ;;
    "cloud"|"cloudsqlite"|"sqlite-cloud")
        cd sqlite
        sqlite-cloud
        cd ..
    ;;
# All tcl/tk-related stuff
    "tcl"|"tcl-all")
      tcl-all
    ;;
    "tcl-code"|"tcl-tips")
      cd tcl
      "${t}"
      cd -
    ;;
    "tk")
      cd "${t}"
      "${t}"-code  # Only the code at the moment.
      cd -
    ;;
    "tk-code") 
      cd tk; pwd
      "${t}"
      cd -
    ;;
    esac # end of case ${t}
  done
fi
popd
